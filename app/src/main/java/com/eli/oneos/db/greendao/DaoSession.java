package com.eli.oneos.db.greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.eli.oneos.db.greendao.UserInfo;
import com.eli.oneos.db.greendao.DeviceHistory;
import com.eli.oneos.db.greendao.BackupFileInfo;
import com.eli.oneos.db.greendao.BackupInfoHistory;

import com.eli.oneos.db.greendao.UserInfoDao;
import com.eli.oneos.db.greendao.DeviceHistoryDao;
import com.eli.oneos.db.greendao.BackupFileInfoDao;
import com.eli.oneos.db.greendao.BackupInfoHistoryDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userInfoDaoConfig;
    private final DaoConfig deviceHistoryDaoConfig;
    private final DaoConfig backupFileInfoDaoConfig;
    private final DaoConfig backupInfoHistoryDaoConfig;

    private final UserInfoDao userInfoDao;
    private final DeviceHistoryDao deviceHistoryDao;
    private final BackupFileInfoDao backupFileInfoDao;
    private final BackupInfoHistoryDao backupInfoHistoryDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userInfoDaoConfig = daoConfigMap.get(UserInfoDao.class).clone();
        userInfoDaoConfig.initIdentityScope(type);

        deviceHistoryDaoConfig = daoConfigMap.get(DeviceHistoryDao.class).clone();
        deviceHistoryDaoConfig.initIdentityScope(type);

        backupFileInfoDaoConfig = daoConfigMap.get(BackupFileInfoDao.class).clone();
        backupFileInfoDaoConfig.initIdentityScope(type);

        backupInfoHistoryDaoConfig = daoConfigMap.get(BackupInfoHistoryDao.class).clone();
        backupInfoHistoryDaoConfig.initIdentityScope(type);

        userInfoDao = new UserInfoDao(userInfoDaoConfig, this);
        deviceHistoryDao = new DeviceHistoryDao(deviceHistoryDaoConfig, this);
        backupFileInfoDao = new BackupFileInfoDao(backupFileInfoDaoConfig, this);
        backupInfoHistoryDao = new BackupInfoHistoryDao(backupInfoHistoryDaoConfig, this);

        registerDao(UserInfo.class, userInfoDao);
        registerDao(DeviceHistory.class, deviceHistoryDao);
        registerDao(BackupFileInfo.class, backupFileInfoDao);
        registerDao(BackupInfoHistory.class, backupInfoHistoryDao);
    }
    
    public void clear() {
        userInfoDaoConfig.getIdentityScope().clear();
        deviceHistoryDaoConfig.getIdentityScope().clear();
        backupFileInfoDaoConfig.getIdentityScope().clear();
        backupInfoHistoryDaoConfig.getIdentityScope().clear();
    }

    public UserInfoDao getUserInfoDao() {
        return userInfoDao;
    }

    public DeviceHistoryDao getDeviceHistoryDao() {
        return deviceHistoryDao;
    }

    public BackupFileInfoDao getBackupFileInfoDao() {
        return backupFileInfoDao;
    }

    public BackupInfoHistoryDao getBackupInfoHistoryDao() {
        return backupInfoHistoryDao;
    }

}
